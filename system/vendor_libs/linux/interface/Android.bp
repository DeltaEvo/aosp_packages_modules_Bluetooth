//
// Copyright 2017 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package {
    // See: http://go/android-license-faq
    // A large-scale-change added 'default_applicable_licenses' to import
    // all of the 'license_kinds' from "system_bt_license"
    // to get the below license kinds:
    //   SPDX-license-identifier-Apache-2.0
    default_applicable_licenses: ["system_bt_license"],
}

cc_binary {
    name: "android.hardware.bluetooth@1.1-service.btlinux",
    defaults: ["bluetooth_cflags"],
    proprietary: true,
    relative_install_path: "hw",
    srcs: [
        "bluetooth_hci.cc",
        "h4_protocol.cc",
        "hci_packetizer.cc",
        "service.cc",
    ],
    header_libs: ["libbluetooth_headers"],
    shared_libs: [
        "android.hardware.bluetooth@1.0",
        "android.hardware.bluetooth@1.1",
        "libbase",
        "libcutils",
        "libhidlbase",
        "liblog",
        "libutils",
    ],
    static_libs: [
        "async_fd_watcher",
    ],
    init_rc: ["android.hardware.bluetooth@1.1-service.btlinux.rc"],
}

cc_library_static {
    name: "async_fd_watcher",
    defaults: ["bluetooth_cflags"],
    proprietary: true,
    srcs: [
        "async_fd_watcher.cc",
    ],
    shared_libs: [
        "liblog",
    ],
    export_include_dirs: [
        ".",
    ],
}

cc_test_host {
    name: "bluetooth-btlinux-hci-test",
    srcs: [
        "async_fd_watcher.cc",
        "h4_protocol.cc",
        "h4_protocol_unittest.cc",
        "hci_packetizer.cc",
    ],
    cflags: [
        "-DNO_THREAD_PRIORITY",
        "-Wall",
        "-Werror",
    ],
    shared_libs: [
        "libbase",
        "libhidlbase",
        "liblog",
        "libutils",
    ],
    static_libs: [
        "libgmock",
    ],
    sanitize: {
        address: true,
        cfi: true,
    },
    test_suites: ["general-tests"],
}
