package {
    // See: http://go/android-license-faq
    // A large-scale-change added 'default_applicable_licenses' to import
    // all of the 'license_kinds' from "system_bt_license"
    // to get the below license kinds:
    //   SPDX-license-identifier-Apache-2.0
    default_applicable_licenses: ["system_bt_license"],
}

cc_defaults {
    name: "fluoride_common_options",
    cflags: [
        "-Wall",
        "-Werror",
        "-Wextra",
        // there are too many unused parameters in all the code.
        "-Wno-unused-parameter",
    ],
}

// Fuzzable defaults are the subset of defaults that are used in fuzzing, which
// requires no shared libraries, and no explicit sanitization.
cc_defaults {
    name: "fluoride_types_defaults_fuzzable",
    defaults: ["fluoride_common_options"],
    cflags: [
        "-DEXPORT_SYMBOL=__attribute__((visibility(\"default\")))",
        "-DLOG_NDEBUG=1",
        "-fvisibility=hidden",
        // struct BT_HDR is defined as a variable-size header in a struct.
        "-Wno-gnu-variable-sized-type-not-at-end",
    ],
    c_std: "c99",
    product_variables: {
        debuggable: {
            cflags: [
                "-DBLUEDROID_DEBUG",
            ],
        },
    },
}

cc_defaults {
    name: "fluoride_defaults_fuzzable",
    target: {
        android: {
            test_config_template: ":BluetoothTestConfigTemplate",
            sanitize: {
                misc_undefined: ["bounds"],
            },
        },
        host: {
            static_libs: [
                "libcutils",
            ],
        },
    },
    defaults: ["fluoride_types_defaults_fuzzable"],
    header_libs: ["libbluetooth_headers"],
    generated_headers: [
        "cxx-bridge-header",
    ],
    include_dirs: ["packages/modules/Bluetooth/system/gd/rust/shim"],
    static_libs: [
        "libbluetooth-types",
        "libbluetooth_rust_interop",
        "libbt-platform-protos-lite",
        "libbt_shim_bridge",
        "libbt_shim_ffi",
    ],
    cpp_std: "c++17",
    min_sdk_version: "current",
}

cc_defaults {
    name: "fluoride_test_defaults",
    defaults: ["fluoride_defaults"],
    host_supported: true,
    shared_libs: [
        "libcrypto",
        "liblog",
    ],
    static_libs: [
        "libbt-common",
        "libbt-protos-lite",
        "libcutils",
        "libgmock",
        "libosi",
        "libosi-AlarmTestHarness",
        "libosi-AllocationTestHarness",
    ],
    sanitize: {
        address: true,
        cfi: true,
        misc_undefined: ["bounds"],
    },
}

cc_defaults {
    name: "fluoride_basic_defaults",
    defaults: [
        "fluoride_defaults",
    ],
    apex_available: [
        "//apex_available:platform",
        "com.android.btservices",
    ],
    static_libs: [
        "libbt-protos-lite",
        "libflatbuffers-cpp",
        "libprotobuf-cpp-lite",
    ],
}

cc_defaults {
    name: "fluoride_defaults",
    defaults: [
        "fluoride_defaults_fuzzable",
    ],
    static_libs: [
        "libbluetooth_gd",
        "libstatslog_bt",
    ],
    target: {
        darwin: {
            // libstatslog_bt -> libbinder doesn't build on mac
            enabled: false,
        },
        android: {
            sanitize: {
                misc_undefined: ["bounds"],
            },
        },
    },
}
